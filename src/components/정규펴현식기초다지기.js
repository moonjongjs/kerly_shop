
        //정규표현식
        // .  모든 문자를 대신한 점
        // |  또는 or 둘중하나
        // ^: 문자열의 시작
        // !  부정
        // [0-9] 숫자의 범위
        // \d 곽괄호를 벗겨서 사용할 경우 약식  역슬래쉬 d  digit(디짓트 : 십진수 숫자)
        // \D 대문자 D 는 : 숫자가 아닌것
        // [a-z] 문자의 범위 알파벳 소문자 abcdefg.....z
        // [A-Z] 문자의 범위 알파벳 abcdefg.....z
        // [A-Za-z] 문자의 범위 알파벳 대소문자 abcdefg.....z
        
        // [A-Za-z0-9] 문자의 범위 알파벳 대소문자숫자 abcdefg.....z
        // [A-Za-z\d] 문자의 범위 알파벳 대소문자숫자 abcdefg.....z
        // [\w] 문자의 범위 알파벳 대소문자숫자 abcdefg.....z
        
        // [A-Za-z0-9가-힣] 문자의 범위 알파벳 대소문자숫자 한글 완성된 글자abcdefg.....z
        // [A-Za-z0-9가-힣ㄱ-ㅎㅏ-ㅣ] 문자의 범위 알파벳 대소문자숫자 한글 완성된 글자와자음과모음abcdefg.....z
        // [A-Za-z0-9가-힣ㄱ-ㅎㅏ-ㅣ\!\@\#\$\%\*\-\_\^\&\+\=\[\]\{\}\'\"\?\/\.\,\`\~\:\;] 문자의 범위 알파벳 대소문자숫자 한글 완성된 글자와자음과모음특수문자abcdefg.....z
        // ()+  그룹 묶음 + 반드시 필수 1자이상 ~~
        // []+  그룹 묶음 + 반드시 필수 1자이상 ~~
        // ()*  그룹 묶음 * 선택 0자에서 1자이상 ~~ 한글자도 없을 수있다.
        // []*  그룹 묶음 * 선택 0자에서 1자이상 ~~ 한글자도 없을 수있다.
        // [^숫자]  곽괄호안에 있으면 부정(Not)의로 숫자가 아닌것
        // $: 문자열의 종료
        // {n} : 정확히 n번 반복할때 일치한다.
        // {6} : 정확히 6번 반복할때 일치한다.(6자만입력)
        // {n,} : n번 이상 반복할때 일치한다.
        // {6,} : 6번 이상 반복할때 일치한다.(6자이상)
        // {n,m} : n번에서 m번 안으로 반복할때 일치한다.
        // {6,20} : 6번에서 20번 안으로 반복할때 일치한다.(6~20)
        // * : 패턴이 일치하지 않거나 한번 이상 반복할때 일치한다. {0,}과 같다.
        // + : 패턴이 한번 이상 반복할때 일치한다. {1,}과 같다.
        // ? : 패턴이 일치하지 않거나 한번만 반복할때 일치한다. {0,1}과 같다.
        // \s 공백

        // /i  대소문자사용가능(무시)
        // /g  패턴 전체의미
        // /gi 대소문자사용가능 그리고 패턴 전체의미

        //구현해서 참인지 거짓인자 판별 : test(); 메서드사용
        //구현해서 참인지 거짓인자 판별하고 바꾼다(변경) : replace(); 메서드사용
        //구현해서 참인지 거짓인자 판별하고 문자추출 : match(); 메서드사용

        // 예제1] 영문대소문자구별없이 6자이상
        // console.log(`/^[A-Za-z]{6,}$/g.test('moonjongBABO123') : `,  /^[A-Za-z]{6,}$/g.test('moonjongBABO123') ); 
        // console.log(`/^[A-Z]{6,}$/gi.test('moon')  `, /^[A-Z]{6,}$/gi.test('moon') );
        // console.log(`/^[a-z]{6,}$/gi.test('MOONJONG') `,  /^[a-z]{6,}$/gi.test('MOONJONG') );

        // 입력전에 공백 ''
        // 공백이 아니면 정규표현식 결과에 따라 true, false 결정
        // 단, 문자는 필수 숫자는 선택 정규표현식
        // 1자이상 조합
       